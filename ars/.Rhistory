?sk
document()
?simulate_things
?rnorm
document()
?simulate_things
document()
document()
?simulate_things
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
x = 6
x = 6
dchisq(x,df=3)
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
plot(density(sv), main = "ARS")
sv <- simulate_things(dchisq_df3, c(-0.1,Inf), n = 10000)
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(-1,Inf), n = 10000)
print(length(sv))
hist(sv, col='blue', prob=TRUE)
hist(sv, col='blue', prob=TRUE)
par(mfrow = c(1, 2))
plot(density(sv), main = "ARS")
lines(a <- seq(-4.5, 4.5, by = 0.05), dchisq(x,df=3), col='blue')
lines(a <- seq(-4.5, 4.5, by = 0.05), dchisq(a,df=3), col='blue')
plot(density(rchisq(10000,df=3)), main = "built-in fuuction")
lines(a <- seq(-4.5, 4.5, by = 0.05), dchisq(a,df=3), col='blue')
dev.off()
qqplot(qchisq(ppoints(500), df = 3), sv,
main = expression("Q-Q plot: AQS for std. Normal"))
qqplot(qchisq(ppoints(500), df = 3), sv,
main = expression("Q-Q plot: AQS for Chi-square, \\ degree of freedom = 3"))
qqplot(qchisq(ppoints(500), df = 3), sv,
main = expression("Q-Q plot: AQS for Chi-square, df = 3"))
ks_res <- ks.test(sv, dchisq_df3)
ks_res_bt <- ks.test(rnorm(10000), dchisq_df3)
ks_res$p.value
options(digits = 22)
ks_res$p.value
ks_res_bt$p.value
ks_res
ks_res_bt$p.value
ks_res_bt
sv <- simulate_things(dunif, c(0,Inf), n = 10000)
sv <- simulate_things(dunif, c(0,Inf), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dunif, c(0,1), n = 10000)
load_all()
load_all()
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
load_all()
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
print(length(sv))
hist(sv, col='blue', prob=TRUE)
## density plot
# add plots comparing the simlated density and the actual density
# for our adaptive rejection sampling function and built-in R function
par(mfrow = c(1, 2))
plot(density(sv), main = "ARS")
lines(a <- seq(-4.5, 4.5, by = 0.05), dchisq(a,df=3), col='blue')
plot(density(rchisq(10000,df=3)), main = "built-in fuuction")
lines(a <- seq(-4.5, 4.5, by = 0.05), dchisq(a,df=3), col='blue')
dev.off()
## qq plot
qqplot(qchisq(ppoints(500), df = 3), sv,
main = expression("Q-Q plot: AQS for Chi-square, df = 3"))
## Kolmogorov-Smirnov Tests
ks_res <- ks.test(sv, dchisq_df3)
ks_res_bt <- ks.test(rnorm(10000), dchisq_df3)
ks_res$p.value
ks_res_bt$p.value
sv <- simulate_things(dunif, c(0,1), n = 10000)
print(length(sv))
sv <- simulate_things(dunif, c(0,1), n = 10000)
load_all()
sv <- simulate_things(dunif, c(0,1), n = 10000)
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
load_all()
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
set.seed(0)
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
set.seed(0)
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
set.seed(0)
ks.test(simulate_things(dnorm, c(-Inf,Inf), n = 10000), pnorm)$p.value
devtools::test()
simulate_things(dnorm, c(-Inf,Inf), n = 10000
)
?dexp
ks.test(simulate_things(function(x){ return( dchisq(x,df=3) ) }, c(0,Inf), n = 10000), dchisq_df3)
ks.test(simulate_things(function(x){ return( dchisq(x,df=3) ) }, c(0,Inf), n = 10000), dchisq_df3)
ks.test(simulate_things(function(x){ return( dchisq(x,df=3) ) }, c(0,Inf), n = 10000), dchisq_df3)
ks.test(simulate_things(function(x){ return( dchisq(x,df=3) ) }, c(0,Inf), n = 10000), dchisq_df3)
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
sv <- simulate_things(dchisq_df3, c(0,Inf), n = 10000)
par(mfrow = c(1, 2))
plot(density(sv), main = "ARS")
lines(a <- seq(-4.5, 4.5, by = 0.05), dchisq(a,df=3), col='blue')
plot(density(rchisq(10000,df=3)), main = "built-in fuuction")
lines(a <- seq(-4.5, 4.5, by = 0.05), dchisq(a,df=3), col='blue')
ks_res <- ks.test(sv, dchisq_df3)
ks_res_bt <- ks.test(rchisq(10000, df = 3), dchisq_df3)
ks_res$p.value
ks_res_bt$p.value
ks_res_bt <- ks.test(rchisq(10000, df = 3), dchisq_df3)
ks_res <- ks.test(sv, pchisq_df3)
dchisq_df3 <- function(x) { return( dchisq(x,df=3) ) }
pchisq_df3 <- function(x) { return( pchisq(x,df=3) ) }
ks_res <- ks.test(sv, pchisq_df3)
ks_res_bt <- ks.test(rchisq(10000, df = 3), pchisq_df3)
ks_res$p.value
ks_res_bt$p.value
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
load_all()
devtools::test()
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
load_all()
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
devtools::test()
devtools::test()
devtools::test()
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(0,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(0,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(0,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(0,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(0,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(0,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(0,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
ks.test(simulate_things(dchisq_df3, c(-Inf,Inf), n = 10000), pchisq_df3)$p.value
devtools::test()
devtools::test()
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
ks.test(simulate_things(dunif, c(-1,1), n = 10000), punif)$p.value
pnorm(1)
pnorm(-1)
pnorm(1)-pnorm(-1)
trctNm <- function(x){
if (abs(x) > 1) return(0)
else return(dnorm(x)/(pnorm(1)-pnorm(-1)))
}
trctNm(0)
dnorm(0)
dnorm(0)/0.682689
integrate(trctNm, -1, 1)
integrate(trctNm, -1, 1)
integrate(trctNm, -1, 0)
integrate(trctNm, -1, 1)
dnorm(1)
(pnorm(-1)*2+dnorm(-1)*2))
(pnorm(-1)*2+dnorm(-1)*2)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
integrate(trctNmT, -Inf, Inf)
trctNmT <- function(x){
if (abs(x) > 1) return(0)
else return(dnorm(x)/(pnorm(1)-pnorm(-1)))
}
integrate(trctNmT, -1, 1)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
integrate(trctNmU, -Inf, Inf)
integrate(trctNmU, -10, 10)
integrate(trctNmU, -1, 11)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1)/(pnorm(-1)*2+dnorm(-1)*2))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
integrate(trctNmU, -11, 11)
integrate(trctNmU, -10, 11)
integrate(trctNmU, -1, 11)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1)/(pnorm(-1)*2+dnorm(-1)*2))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
integrate(trctNmU, -1, 11)
integrate(trctNmU, 0, 11)
integrate(trctNmU, 0, 30)
integrate(trctNmU, 0, 50)
integrate(trctNmU, -50, 50)
pnorm(-1)
pnorm(-1)*2+dnorm(-1)*2)
pnorm(-1)*2+dnorm(-1)*2
(pnorm(-1)*2+dnorm(-1)*2)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1)/(pnorm(-1)*2+dnorm(-1)*2))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
x= 3
abs(x) < 1
abs(x)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1)/(pnorm(-1)*2+dnorm(-1)*2))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
trctNmU(0)
dnorm(1)
trctNmU(-1)
trctNmU(1)
trctNmU(-2)
trctNmU(2)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1)/(pnorm(-1)*2+dnorm(-1)*2))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
integrate(trctNmU, -50, 50)
integrate(trctNmU, 0, 50)
integrate(trctNmU, -50, 0)
1/.62
0.5/0.62
0.5/0.624023
rm(list=ls())
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1)/(pnorm(-1)*2+dnorm(-1)*2))
else return(dnorm(x)/(pnorm(-1)*2+dnorm(-1)*2))
}
integrate(trctNmU, -50, 0)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1))
else return(dnorm(x))
}
integrate(trctNmU, -50, 0)
integrate(trctNmU, 0, 50)
plot(trctNmU)
plot(trctNmU(1:100))
plot(trctNmU(0:3:0.01))
plot(trctNmU(seq(0,3,0.01)))
seq(0,3,0.01)
sapply(seq(0,3,0.01), trctNmU
sapply(seq(0,3,0.01), trctNmU)
sapply(seq(0,3,0.01), trctNmU)
plot(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
lines(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
lines(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
lines(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
dev.off()
lines(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
lines(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
plot()
lines(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
plot(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
plot(seq(0,3,0.01), sapply(seq(0,3,0.01), dnorm))
integrate(trctNmU, 0, 50)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1)/(dnorm(1)*2+pnorm(-1)*2))
else return(dnorm(x)/(dnorm(1)*2+pnorm(-1)*2))
}
integrate(trctNmU, 0, 50)
(dnorm(1)*2+pnorm(-1)*2)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1))
else return(dnorm(x))
}
plot(seq(0,3,0.01), sapply(seq(0,3,0.01), trctNmU))
plot(seq(0,3,0.01), sapply(seq(0,3,0.01), dnorm))
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(x))
else return(dnorm(x))
}
integrate(trctNmU, 0, 50)
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1))
else return(dnorm(x))
}
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1))
else return(dnorm(x))
}
trctNmU <- function(x){
if (abs(x) < 1) return(dnorm(1))
else return(dnorm(x))
}
integrate(trctNmU, 0, 50)
integrate(trctNmU, 1, 50)
integrate(trctNmU, -1, 1)
integrate(trctNmU, 0, 1)
integrate(trctNmU, 0, 1)
trctNmU <- function(x){
if (x > -1 & x < 1) return(dnorm(1))
else return(dnorm(x))
}
integrate(trctNmU, 1, 50)
integrate(trctNmU, 0, 1)
dev.off()
dbeta
?dbeta
dt
?dt
mode(c(2, 2))
mode(c(Inf, -Inf))
a  <- list(1:10, letters)
expect_output(str(a), "List of 2")
str(a)
a <- expect_output(str(a), "List of 2")
a
expect_is(c(2, 2), "numeric")
a <- expect_is(c(2, 2), "numeric")
a
a <- expect_is(c("c", 2), "numeric")
is.integer(-1)
is.integer(-2)
is.integer(1)
is.integer(1L)
load_all()
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
hist(sv, col='blue', prob=TRUE)
par(mfrow = c(1, 2))
plot(density(sv), main = "ARS")
lines(a <- seq(-4.5, 4.5, by = 0.05), dnorm(a), col='blue')
plot(density(rnorm(10000)), main = "built-in fuuction")
lines(a <- seq(-4.5, 4.5, by = 0.05), dnorm(a), col='blue')
load_all()
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
hist(sv, col='blue', prob=TRUE)
sk(c(-1/2, 1/2), c(-1/2, 1/2), c(-1, 1), c(-1, 0,  1))
xj= c(-1/2, 1/2)
hj= c(-1/2, 1/2)
dhj=c(-1, 1)
my_domains = c(-1, 0,  1)
hj + (dhj * (my_domains[2:(n+1)] - xj)
)
n=2
)
hj + (dhj * (my_domains[2:(n+1)] - xj))
hj + (dhj * (my_domains[1:n] - xj)))
hj + (dhj * (my_domains[1:n] - xj))
exp(-1)
exp(-1)*(-2)
(exp(hj + (dhj * (my_domains[2:(n+1)] - xj)))
- exp(hj + (dhj * (my_domains[1:n] - xj))))
exp(hj + (dhj * (my_domains[2:(n+1)] - xj)))
exp(0)-exp(-1)
exp(1)-exp(0)
a = test_equal(sk(c(-1/2, 1/2), c(-1/2, 1/2), c(-1, 1), c(-1, 0,  1)), c(exp(0)-exp(-1), (exp(1)-exp(0))))
a <- expect_equal(sk(c(-1/2, 1/2), c(-1/2, 1/2), c(-1, 1), c(-1, 0,  1)), c(exp(0)-exp(-1), (exp(1)-exp(0))))
a
xj = -1
hj = -1
dhj = -1
my_domains = c(-Inf, 0)
n = 1
((exp(hj + (dhj * (my_domains[2:(n+1)] - xj)))
- exp(hj + (dhj * (my_domains[1:n] - xj)))) / dhj)
load_all()
# library(mosaic)
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
hist(sv, col='blue', prob=TRUE)
load_all()
# library(mosaic)
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
print(length(sv))
# print(sv)
hist(sv, col='blue', prob=TRUE)
library('devtools')
setwd('/Users/jorothygong/Desktop/243/243FinalProject/ars')
dir()
## [1] "ars.Rproj"   "DESCRIPTION" "man"         "NAMESPACE"   "R"           "tests"
file.edit('DESCRIPTION')
load_all()
# library(mosaic)
sv <- simulate_things(dnorm, c(-Inf,Inf), n = 10000)
hist(sv, col='blue', prob=TRUE)
devtools::test()
document()
